@using Microsoft.AspNetCore.Authorization
@using FoodPicker.Web.Controllers
@model MealWeek
@inject IAuthorizationService _authorizationService;

@{
    ViewBag.Title = "Week";
}

<h2>@(Model.Id == 0 ? "Create" : "Edit") Week</h2>
<form asp-route="@(Model.Id == 0 ? "WeekCreate" : "WeekEdit")" method="post" class="mb-3">
    <div class="mb-3">
        <label asp-for="DeliveryDate"></label>
        <input asp-for="DeliveryDate" type="date" class="form-control" />
    </div>
    <div class="mb-3">
        <label asp-for="MealWeekStatus"></label>
        <select asp-for="MealWeekStatus" asp-items="@Html.GetEnumSelectList<MealWeekStatus>()" >
        </select>
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
</form>

@if (Model.Id != 0)
{
    @if (Model.MealWeekStatus == MealWeekStatus.Future)
    {
        <form asp-action="GenerateMeals" asp-route-id="@Model.Id" method="post" class="mb-3 d-inline">
            <button type="submit" class="btn btn-secondary">Generate Meals</button>
        </form>
    }
    
    <form asp-action="SkipWeek" asp-route-id="@Model.Id" method="post" class="mb-3 d-inline">
        <button type="submit" class="btn btn-secondary">Skip Week</button>
    </form>
    
    <internal-admin>
        <button type="button" class="btn btn-danger d-inline" id="delete-week-button">Delete Week</button>
    </internal-admin>

    <hr />
    <div class="row row-cols-1 row-cols-md-4 g-4">
        @foreach (var meal in Model.Meals)
        {
            <div class="col">
                <div class="card h-100">
                    @await Html.PartialAsync("MealDetailsPartial", new WeekController.MealDetailsViewModel()
                           {
                               Meal = meal,
                               PreviousRatings = Enumerable.Empty<MealRating>()
                           })
                </div>
            </div>
        }
    </div>
}

@section Scripts {
    <script>
        const deleteButtonEl = document.getElementById("delete-week-button");
        
        if (deleteButtonEl) {
            deleteButtonEl.addEventListener("click", async function (e) {
                if (confirm("Are you sure you want to delete this week?")) {
                    const fetchResult = await fetch("@Url.Action("Delete", new {weekId = Model.Id})", {
                        method: "DELETE"
                    });
                    if (fetchResult.status !== 200) {
                        alert(`Delete failed with status code ${fetchResult.statusText}`);
                        return;
                    }
                    
                    window.location.href = "@Url.Action("Index")";
                }
            });
        }
    </script>
}
