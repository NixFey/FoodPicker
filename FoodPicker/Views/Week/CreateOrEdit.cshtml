@using Microsoft.AspNetCore.Authorization
@using FoodPicker.Enums
@model MealWeek
@inject IAuthorizationService _authorizationService;

@{
    ViewBag.Title = "Week";
}

<h2>@(Model.Id == 0 ? "Create" : "Edit") Week</h2>
<form asp-route="@(Model.Id == 0 ? "WeekCreate" : "WeekEdit")" method="post" class="mb-3">
    <div class="mb-3">
        <label asp-for="DeliveryDate"></label>
        <input asp-for="DeliveryDate" type="date" class="form-control" />
    </div>
    <div class="mb-3">
        <label asp-for="MealWeekStatus"></label>
        <select asp-for="MealWeekStatus" asp-items="@Html.GetEnumSelectList<MealWeekStatus>()" >
        </select>
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
</form>

@if (Model.Id != 0)
{
    @if (Model.MealWeekStatus == MealWeekStatus.Future)
    {
        <form asp-action="GenerateMeals" asp-route-id="@Model.Id" method="post" class="mb-3">
            <button type="submit" class="btn btn-secondary">Generate Meals</button>
        </form>
    }
    
    @if ((await _authorizationService.AuthorizeAsync(User, AuthorizationPolicies.AccessInternalAdminAreas)).Succeeded)
    {
        <button type="button" class="btn btn-danger" id="delete-week-button">Delete Week</button>
    }

    <hr />
    <div class="row row-cols-1 row-cols-md-4 g-4">
        @foreach (var meal in Model.Meals)
        {
            <div class="col">
                <div class="card">
                    <img src="@meal.ImageUrl" class="card-img-top" alt="Meal Image">
                    <div class="card-body">
                        <h5 class="card-title">@meal.Name</h5>
                        <p class="card-text">@meal.Description</p>
                        @if (!string.IsNullOrEmpty(meal.Tags))
                        {
                            <span class="badge rounded-pill bg-primary">@meal.Tags</span>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}

@section Scripts {
    <script>
        const deleteButtonEl = document.getElementById("delete-week-button");
        
        if (deleteButtonEl) {
            deleteButtonEl.addEventListener("click", async function (e) {
                if (confirm("Are you sure you want to delete this week?")) {
                    const fetchResult = await fetch("@Url.Action("Delete", new {weekId = Model.Id})", {
                        method: "DELETE"
                    });
                    if (fetchResult.status !== 200) {
                        alert(`Delete failed with status code ${fetchResult.statusText}`);
                        return;
                    }
                    
                    window.location.href = "@Url.Action("Index")";
                }
            });
        }
    </script>
}
